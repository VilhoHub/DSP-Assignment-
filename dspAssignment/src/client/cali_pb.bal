

    *grpc:AbstractClientEndpoint;

    private grpc:Client grpcClient;

    public function __init(string url, grpc:ClientConfiguration? config = ()) {
        // initialize client endpoint.
        self.grpcClient = new(url, config);
        checkpanic self.grpcClient.initStub(self, "non-blocking", ROOT_DESCRIPTOR, getDescriptorMap());
    }

    public remote function readRecord(string req, service msgListener, grpc:Headers? headers = ()) returns (grpc:Error?) {
        
        return self.grpcClient->nonBlockingExecute("service.cali/readRecord", req, msgListener, headers);
    }

    public remote function updateRecord(recordDetails req, service msgListener, grpc:Headers? headers = ()) returns (grpc:Error?) {
        
        return self.grpcClient->nonBlockingExecute("service.cali/updateRecord", req, msgListener, headers);
    }

    public remote function writeRecord(recordDetails req, service msgListener, grpc:Headers? headers = ()) returns (grpc:Error?) {
        
        return self.grpcClient->nonBlockingExecute("service.cali/writeRecord", req, msgListener, headers);
    }

};

public type recordDetails record {|
    string id = "";
    string artist = "";
    string date = "";
    string song = "";
    string album = "";
    
|};



const string
function getDescriptorMap() returns map<string> {
    return {
        "cali.proto
        "google/protobuf/wrappers.proto
        
    };
}
